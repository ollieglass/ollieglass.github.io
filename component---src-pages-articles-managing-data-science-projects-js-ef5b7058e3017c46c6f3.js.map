{"version":3,"sources":["webpack:///./src/pages/articles/managing-data-science-projects.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","a","createElement","property","content","name","to","m","module","exports","require","default","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","react_helmet__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","ListLink","style","display","marginRight","Layout","margin","maxWidth","padding","title","type","lang","marginBottom","textDecoration","listStyle","paddingLeft","marginLeft","marginTop","node"],"mappings":"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","file":"component---src-pages-articles-managing-data-science-projects-js-ef5b7058e3017c46c6f3.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link } from 'gatsby'\n\nimport Layout from '../../components/layout'\n\n\nexport default () => (\n  <Layout>\n\n  <Helmet>\n    {/* OpenGraph tags */}\n    <meta property=\"og:url\" content=\"https://ollieglass.com/articles/managing-data-science-projects\" />\n    <meta property=\"og:title\" content=\"Managing data science projects\" />\n    <meta property=\"og:description\" content=\"How to deliver data science projects reliably and effectively.\" />\n\n    {/* Twitter Card tags */}\n    <meta name=\"twitter:card\" content=\"summary\" />\n    <meta name=\"twitter:creator\" content=\"@ollieglass\" />\n  </Helmet>\n\n\t<h2>Managing data science projects</h2>\n\n\t<p>Data science and machine learning projects have high expectations and high failure rates. Ideas seem promising and data scientists start experimenting, but teams struggle to follow through. Projects run on indefinitely without clear goals or deliverables, teams lose direction and momentum, important individual contributors leave. What makes these projects so difficult? How can they be delivered effectively?</p>\n\n\t<p>In this piece I’ll show how I introduce data science to a company and deliver a project. My projects typically involve creating new features for existing products. I recommend clients start small, so I'll give examples for a three-month project. I’ll describe the tasks and outcomes at each stage, how I manage common risks and challenges, and how I work with stakeholders.</p>\n\n\t<h3>Discovery</h3>\n\n\t<p>While amazing things can be done with data science, many descriptions of it are hyperbolic and don’t help you think clearly about what's possible. Involving a data scientist from the start will let you check the feasibility of ideas and get a sense of the costs, time and chance of success. A data scientist can also suggest different ideas to develop your business, or ways to approach a project that you might not have considered.</p>\n\n\t<p>Data science is inherently risky. Identifying and understanding the risks early will help you make decisions about project viability and set expectations across the company. Sufficient data must be available, and some amount of data engineering, infrastructure and pipeline development will be required to deploy the feature. Product design, the work of other teams who touch the feature, and even business strategy may need to be reviewed to fully capture the value of new work. Each of these areas must be addressed for your business. A similar company that has completed a similar project is no guarantee it’ll work for you or work as well. </p>\n\n\t<p>Some features are less complex and are a natural fit for data science. Consider a product that lets users send emails campaigns. Users manually enter times and dates to schedule email sends, and there are records of sent emails and open rates. Looking for correlations between send times and open rates, then presenting that to the user as a decision support tool, is a sensible feature to try, especially for a first data science project.</p>\n\n\t<p>Data science usually involves creating models that make predictions. Models might predict the best time to send a marketing email or which related products to show to a user. It’s important to work out how accurate a model needs to be for a product feature to be viable. Knowing this in advance lets you set a clear goal for the research stage. </p>\n\n\t<p>The minimum accuracy required should come from a dialogue between data science and product design. Being flexible may let you deliver versions of features early, or continue with projects even if research produces less than ideal accuracy. For example, with our email send example we might hope to build a model that can predict the best time to send, but only be able to produce one that can predict if morning or afternoon better. This would still be a good outcome and could be improved later.</p>\n\n\t<p><strong>Outcomes:</strong> A shortlist of possible features, and a single feature to focus on. A sense of what the finished feature would look like if it was working well.</p>\n\n\t<p><strong>Risks:</strong> Discovering it’s not possible to build your feature, or that it would be prohibitively expensive.</p>\n\n\t<p><strong>Time:</strong> From a few days to a few weeks, usually a week.</p>\n\n\n\t<h3>Research</h3>\n\n\t<p>Research is required to work out how to create the model and meet the accuracy goal. This involves considering what the feature does, for example, predicting sale prices from photos of shoes, and finding ways to express that as a scientific or machine learning problem. Scientific problems can be tackled in different ways, so you might start by shortlisting methods and considering the tradeoffs between them.</p>\n\n\t<p>How much data you need depends on your methods, with requirements ranging from tens to hundreds of millions of records. Having more data available will usually improve results, so if you don’t already have much data collected it can be worth finding new ways to capture it. Approaches include adding “data exhausts” to existing processes in your product, buying third party data sets, adding different but related proxy data to your own, or creating new synthetic data.</p>\n\n\t<p>Sometimes it can help to add more detail to data, especially if it wasn’t captured with data science or machine learning in mind. Running a data enrichment process with your team is good for building small data sets or for enrichment that requires expert knowledge. Third party services like Amazon’s Mechanical Turk or Clickworker can be used for larger volumes.</p>\n\n\t<p>When the data is ready and the approach is clear it’s best to start by trying a simple modelling technique and measuring the results. Starting simply lets you set a baseline to compare future research against, and means your first research communication will have less complicated ground to cover.</p>\n\n\t<p>Research and results must be communicated to prevent data science work from becoming opaque and detached from the wider business, and this can be challenging. Modelling techniques may be complex and hard to describe. Results may not be intuitive. Instead of a single accuracy measure there may be several factors which have to be traded off against each other. These may require stakeholders to work with new concepts so they can understand and input on the decisions being made.</p>\n\n\t<p>Company-wide overviews don’t need to go into technical details. They can build engagement and excitement in the project and address wider concerns about changes to the product or team. Building a deeper understanding with domain specialists and key stakeholders is invaluable for surfacing insights and clarifying requirements. An informal “research council” can guide the direction of research and disseminate details to teams that need to be made aware of them.</p>\n\n\t<p>The scientific method involves rounds of trial and error, revision and improvement. Progress can be uneven, alternating between plateaus of testing new approaches with no apparent change followed by rapid improvements when a new method bears fruit. Over time there should be a gradual increase in accuracy and performance as an approach is refined. When you reach the minimum accuracy level set in the planning stage, your research is de-risked. You can choose between improving accuracy or moving on to production.</p>\n\n\t<p>It helps organisations if their first data science projects are successful. In the planning stage, consider only taking on projects where you’re confident that minimum accuracy can be achieved easily. You can use experience, industry benchmarks and a survey of the data to estimate what’s possible. It’s essential to communicate the risks and costs of work where confidence is low, so organisations can make informed decisions and set their expectations accordingly.</p>\n\n\t<p><strong>Outcomes:</strong> A data science methodology that produces the outputs you need at an acceptable accuracy level. You and your team understand the general approach and have agreed any trade-offs.</p>\n\n\t<p><strong>Risks:</strong> Not achieving a minimum accuracy goal within the research time or budget. Discovering an approach that can’t be scaled to a production system.</p>\n\n\t<p><strong>Time:</strong> From a few weeks to a few months, usually a month.</p>\n\n\t<h3>Production</h3>\n\n\t<p>Moving the data preparation and modelling techniques into production is the most straightforward part of the process. Most of the challenges here have well known solutions, including working with large amounts of data, meeting low latency requirements, or managing complex data transformations.</p>\n\n\t<p>That said, there’s no common approach for moving data science from research into production, nor is there a widely adopted production framework. Ruby on Rails transformed web development and became something close to an industry standard. React and Redux are doing something similar for front-end development. But data science only has some proprietary third-party services like Amazon Sagemaker, nothing standard or completely open source.</p>\n\n\t<p>Most projects require similar technical components: some kind of extract, transform and load (ETL) data pipeline that moves data from your product to a data science service and prepares it for use, model building and validation, deployment of models to a live system and ongoing monitoring. To prevent them from becoming tangled or overly complicated, they should be carefully designed and integrated with your product and deployment environment.</p>\n\n\t<p>There are excellent libraries like Keras, Tensorflow, Pandas, scikit-learn and NumPy for the most common and critical tasks, used and sponsored by companies like Bloomberg, Spotify and Booking.com. Dedicated “big data” tools like Hadoop and Spark are not needed on most projects. Instead AWS and Google Cloud provide excellent services for working with data at scale and are straightforward to integrate with most existing technology stacks. Your engineering team can ensure services are chosen that work well with your other systems.</p>\n\n\t<p><strong>Outcomes:</strong> A data product feature deployed to production.</p>\n\n\t<p><strong>Risks:</strong> Usual engineering risks of time and budget overruns. Producing complex software that’s difficult to maintain.</p>\n\n\t<p><strong>Time:</strong> About a month.</p>\n\n\n\t<h3>Operation</h3>\n\n\t<p>It’s important to monitor that features are operating properly in production. Uptime and general status of a data science feature can usually be overseen with the monitoring services used in other parts of a technology stack. To ensure a fast and straightforward technical handover, involve the engineers in the design and build of the system, and DevOps or SRE teams in the design and operation of monitoring.</p>\n\n\t<p>To be certain that a system is working well in a live setting, it might be necessary to monitor model accuracy on live data. If performance goes outside of an expected range, you may want alerts and a fallback system to kick in.</p>\n\n\t<p>Some machine learning systems will require updating when the underlying data changes. A process for monitoring and updating models can be incorporated into the design, build and ongoing operation of the system. It may be possible to automatically retrain models with only minimal oversight or intervention, and this task can be handed over to a general developer or analyst. A dedicated data scientist may be necessary to monitor and adjust more complex or bespoke models.</p>\n\n\t<p>It’s vital that the new feature is understood and adopted by its stakeholders including product users and internal teams. Bringing data science into a company is a transformational process, and new ways of working and thinking have to take root for it to be successful. The shared understanding and ownership built by involving the wider team in the research efforts will pay dividends here.</p>\n\n\t<p><strong>Outcomes: </strong>Ownership is transferred to in house technical team. Adoption of the new feature and any new ways of working it requires.</p>\n\n\t<p><strong>Risks:</strong> Failing to maintain the feature or make full use of it. Organizational rejection of the new feature.</p>\n\n\t<p><strong>Time:</strong> At least a week dedicated handover time, but also ongoing throughout the project, especially in the earlier stages.</p>\n\n\t<h3>Summing up</h3>\n\n\t<p>Projects can seem daunting at first, but dividing work into stages with clear goals and processes will make it easier to manage. Discovery and research stages are all about finding good ideas to try and learning what can be achieved. If data science can’t produce the results you need, find out quickly before committing to building and managing new technology.</p>\n\n\t<p>If research shows you have a viable feature then the key tasks become making decisions with the team about the best trade-offs and getting it to an optimal level of performance. Ongoing data science support may be required but much of the delivery and operation is similar to any other engineering project.</p>\n\n\t<h3>Further reading</h3>\n\n\t<p>Return to the introductory piece, <Link to=\"/articles\">data science today</Link></p>\n\n\t<p>Read about <Link to=\"/articles/understanding-and-managing-uncertainty-in-data-science-projects\">understanding and managing uncertainty in data science projects</Link>.</p>\n\n  </Layout>\n);\n\n\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { Link } from \"gatsby\"\n\nimport './simplegrid.css'\nimport './layout.css'\n\nconst ListLink = props =>\n  <li style={{ display: `inline-block`, marginRight: `0.5rem` }}>\n    <Link to={props.to}>\n      {props.children}\n    </Link>\n  </li>\n\nconst Layout = ({ children }) => (\n  <div style={{ margin: `0 auto`, maxWidth: 850, padding: `1.25rem 1rem` }}>\n\n    <Helmet\n      title=\"Ollie Glass - data science, machine learning &amp; data strategy\"\n    >\n      {/* General tags */}\n      <meta name=\"description\" content=\"Contracting and consulting data scientist. I help companies understand data science and machine learning, form data strategies, and design and build data products.\" />\n      {/*<meta name=\"image\" content={image} />*/}\n\n      <meta name=\"google-site-verification\" content=\"rvZZQM9_PSENuyEeo4gS4Iu972qssTQnifk73ePR06o\" />\n      <script type=\"text/javascript\">{`\n          window.smartlook||(function(d) {\n          var o=smartlook=function(){ o.api.push(arguments)},h=d.getElementsByTagName('head')[0];\n          var c=d.createElement('script');o.api=new Array();c.async=true;c.type='text/javascript';\n          c.charset='utf-8';c.src='https://rec.smartlook.com/recorder.js';h.appendChild(c);\n          })(document);\n          smartlook('init', '22317595d614e19e1a73959d93c5ea3db08fdc0b');\n      `}</script>\n\n      <html lang=\"en\" />\n    </Helmet>\n\n    <header style={{ marginBottom: '1rem' }}>\n      <Link to=\"/\" style={{ textDecoration: 'none' }}>\n        <h1 style={{ display: 'inline' }}>Ollie Glass</h1>\n      </Link>\n\n      <ul style={{\n        listStyle: 'none',\n        paddingLeft: 0,\n        marginLeft: 0,\n        marginBottom: 0,\n        marginTop: 10\n      }}>\n        <ListLink to=\"/\">Home</ListLink>\n        <ListLink to=\"/services/\">Services</ListLink>\n        <ListLink to=\"/case-studies/\">Case studies</ListLink>\n        <ListLink to=\"/articles/\">Articles</ListLink>\n      </ul>\n    </header>\n\n    {children}\n\n  </div>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}